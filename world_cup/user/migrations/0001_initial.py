# Generated by Django 4.1.2 on 2022-10-21 21:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('football', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('token', models.CharField(blank=True, max_length=255, null=True, verbose_name='Token')),
                ('mobile_number', models.CharField(max_length=31, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format:+989999999999' or '09999999999'.Up to 13 digits allowed.allowed characters: [0-9] and '+'.", regex='^((?:0[0-9]{8,10})|(?:\\+[0-9][0-9]{11,14}))$')], verbose_name='Mobile number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('avatar', models.JSONField(blank=True, default={'current': '1'}, null=True, verbose_name='Avatar')),
                ('profile_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Profile name')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is verified')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Is blocked')),
                ('setting', models.JSONField(blank=True, default=dict, null=True, verbose_name='Setting')),
                ('client_version', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Client version')),
                ('score', models.PositiveBigIntegerField(verbose_name='score')),
            ],
            options={
                'verbose_name': 'Player',
                'verbose_name_plural': 'Players',
            },
            bases=('user.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('description', models.TextField(verbose_name='description')),
                ('is_resolved', models.BooleanField(default=False, verbose_name='is resolved')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.player', verbose_name='player')),
            ],
            options={
                'verbose_name': 'Feed Back',
                'verbose_name_plural': 'Feed Backs',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='PredictionArrange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('predict_team_1', models.JSONField()),
                ('predict_team_2', models.JSONField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.player')),
            ],
            options={
                'unique_together': {('player', 'match')},
            },
        ),
    ]
